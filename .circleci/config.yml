version: 2
jobs:
  lint:
    docker:
      - image: cimg/base:2021.05
    environment:
      VERBOSE: "1"
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - run: ./scripts/docker.sh build
      - run:
          name: Check formatting
          command: |
            docker create -v /src --name sources alpine:3.4 /bin/true
            docker cp . sources:/src
            docker run --volumes-from sources cryptography /src/scripts/lint
  build:
    docker:
      - image: cimg/base:2021.05
    environment:
      VERBOSE: "1"
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - run: ./scripts/docker.sh build
      - run:
          name: Store rust version in an environment var for cache key
          command: ./scripts/docker.sh run rustc --version > rust.version
      - restore_cache:
          keys:
            - v2-nightly-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
            - v2-nightly-cache-{{ checksum "./rust.version" }}
            - v2-cli-cache-{{ checksum "./rust.version" }}
      - run:
          name: Build nightly
          command: |
            docker create -v /src --name sources alpine:3.4 /bin/true
            docker cp . sources:/src
            docker run --volumes-from sources -w /src cryptography cargo +nightly build
      - save_cache:
          key: v2-nightly-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
          paths:
            - "~/.cargo"
            - "./target"
  test:
    docker:
      - image: cimg/base:2021.05
    environment:
      VERBOSE: "1"
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - run: ./scripts/docker.sh build
      - run:
          name: Store rust version in a file for cache key
          command: ./scripts/docker.sh run rustc --version > rust.version
      - restore_cache:
          keys:
            - v6-test-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
            - v6-test-cache-{{ checksum "./rust.version" }}
      - run:
          name: Run tests
          command: |
            docker create -v /src --name sources alpine:3.4 /bin/true
            docker cp . sources:/src
            docker run --volumes-from sources cryptography /src/scripts/test
      - save_cache:
          key: v6-test-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
          paths:
            - "~/.cargo"
            - "./target"
  bench:
    docker:
      - image: cimg/base:2021.05
    environment:
      VERBOSE: "1"
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - run: ./scripts/docker.sh build
      - run:
          name: Store rust version in a file for cache key
          command: ./scripts/docker.sh run rustc --version > rust.version
      - restore_cache:
          keys:
            - v6-bench-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
            - v6-bench-cache-{{ checksum "./rust.version" }}
      - run:
          name: Run tests
          command: |
            docker create -v /src --name sources alpine:3.4 /bin/true
            docker cp . sources:/src
            docker run --volumes-from sources -w cryptography cargo +nightly bench
      - save_cache:
          key: v6-bench-cache-{{ checksum "./rust.version" }}-{{ checksum "./Cargo.lock" }}
          paths:
            - "~/.cargo"
            - "./target"
workflows:
  version: 2
  lint-test-build:
    jobs:
      - lint
      - test
      - build:
          requires:
            - lint
            - test
          filters:
            branches:
              only:
                - develop
