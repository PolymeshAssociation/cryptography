#! /bin/bash

set -eo pipefail

if [ "$#" -ne 3 ]; then
    echo "$0 <PROJECT_NAME> <SRC_DIR> <DST_DIR>"
    exit 1
fi

PROJECT_NAME="$1"
SRC_DIR="$2"
DST_DIR="$3"

# https://github.com/rustwasm/wasm-pack/issues/951#issuecomment-779601026
cargo install --git https://github.com/rustwasm/wasm-pack wasm-pack

echo "Building npm package from $SRC_DIR to $DST_DIR"

rm -rf "$DST_DIR"
mkdir -p "$DST_DIR"
cd "$SRC_DIR"

# Inherit the root level license
ROOT=$( cd `dirname $0`/..;  pwd )
cp "$ROOT/LICENSE" .

# -------------------------------------------------------------------------
# Build the webpack npm package
mkdir -p "$DST_DIR/webpack"
rm -rf "pkg*"
rustup run nightly wasm-pack build --release

# Change the autogenerated name to have @polymeshassociation as a prefix
SET_VERSION_PY="import json,sys; obj = json.load(sys.stdin); obj[\"name\"]=\"@polymeshassociation/${PROJECT_NAME}\"; print(json.dumps(obj, sort_keys=True, indent=4, separators=(',', ': ')))"
MODIFIED=$(cat pkg/package.json | python3 -c "${SET_VERSION_PY}")
echo "$MODIFIED" > pkg/package.json

# Move to the artifact directory
cp -r pkg/* "$DST_DIR/webpack"

mv pkg pkg_webpack # The CD will cd to this directory and publish its content to npmjs.com

# -------------------------------------------------------------------------
# Build the nodejs npm package
mkdir -p "$DST_DIR/nodejs"
rustup run nightly wasm-pack build --release --target nodejs

# Change the autogenerated name to have @polymeshassociation as a prefix and -nodejs as suffix
SET_VERSION_PY="import json,sys; obj = json.load(sys.stdin); obj[\"name\"]=\"@polymeshassociation/${PROJECT_NAME}-nodejs\"; print(json.dumps(obj, sort_keys=True, indent=4, separators=(',', ': ')))"
MODIFIED=$(cat pkg/package.json | python3 -c "${SET_VERSION_PY}")
echo "$MODIFIED" > pkg/package.json

# Move to the artifact directory
cp -r pkg/* "$DST_DIR/nodejs"

mv pkg pkg_nodejs # The CD will cd to this directory and publish its content to npmjs.com
